script 				: decl-list
					;

decl-list 			: decl-list decl
					| decl
					;

decl 				: func-decl
					| var-decl
					| import-decl
					;

import-decl 		: IMPORT identifier
					;

func-decl 			: FUNCTION identifier LPAREN args-decl RPAREN statement-block
					| FUNCTION identifier LPAREN RPAREN statement-block
					;
args-decl 			: args-decl COMMA identifier
					| identifier
					;

var-decl 			: VAR identifier
					| VAR identifier OP-ASSIGN expression
					;
identifier 			: NAME
					;


statement-block 	: LBRACE statement-list RBRACE
					;
statement-list 		: statement-list statement
					| statement
					;
statement 			: expression SEMI
		 			| return-statement
					| continue-statement
					| break-statement
					| select-construct
					| for-construct
					| while-construct
					;

return-statement 	: RETURN expression SEMI
					| RETURN SEMI
					;
continue-statement 	: CONTINUE SEMI
					;
break-statement 	: BREAK SEMI
					;

select-construct 	: if-construct
					| if-construct elseif-list
					| if-construct 				else-construct
					| if-construct elseif-list 	else-construct
					;
if-construct 		: IF LPAREN expression RPAREN statement-block
					;
elseif-construct 	: ELSE IF LPAREN expression RPAREN statement-block
					;
else-construct 		: ELSE statement-block
					;
elseif-list 		: elseif-list elseif-construct
					| elseif-construct
					;

while-construct 	: WHILE LPAREN expression RPAREN statement-block
					;
for-construct 		: FOR LPAREN expression SEMI expression SEMI expression RPAREN statement-block
					;

expression 			: assign-exp
					;

assign-exp 			: identifier OP-ASSIGN assign-exp
					| identifier OP-ADD-EQ assign-exp
					| identifier OP-SUB-EQ assign-exp
					| identifier OP-MUL-EQ assign-exp
					| identifier OP-DIV-EQ assign-exp
					| identifier OP-MOD-EQ assign-exp
					| identifier OP-AND-EQ assign-exp
					| identifier OP-XOR-EQ assign-exp
					| identifier OP-OR-EQ assign-exp
					| identifier OP-LSHIFT-EQ assign-exp
					| identifier OP-RSHIFT-EQ assign-exp
					| ternary-exp
					;
ternary-exp 		: bool-or-exp QUESTION expression COLON ternary-exp
					| bool-or-exp
					;

bool-exp 			: bool-exp OP-BOOLOR

bool-or-exp 		: bool-or-exp OP-BOOLOR bool-and-exp
					| bool-and-exp
					;
bool-and-exp 		: bool-and-exp OP-BOOLAND bit-or-exp
					| bit-or-exp
					;
bit-or-exp 			: bit-or-exp OP-BITOR bit-xor-exp
					| bit-xor-exp
					;
bit-xor-exp 		: bit-xor-exp OP-BITXOR bit-and-exp
					| bit-and-exp
					;
bit-and-exp 		: bit-and-exp OP-BITAND equality-exp
					| equality-exp
					;
equality-exp 		: equality-exp OP-EQUAL relation-exp
					| equality-exp OP-NOT-EQUAL relation-exp
					| relation-exp
					;
relation-exp 		: relation-exp OP-LESS-EQ bit-shift-exp
					| relation-exp OP-MORE-EQ bit-shift-exp
					| relation-exp OP-LESS bit-shift-exp
					| relation-exp OP-MORE bit-shift-exp
					| bit-shift-exp
					;
bit-shift-exp 		: bit-shift-exp OP-LSHIFT additive-exp
					| bit-shift-exp OP-RSHIFT additive-exp
					| add-exp
					;
add-exp 			: add-exp OP-ADD mul-exp
					| add-exp OP-SUB mul-exp
					| mul-exp
					;
multiply-exp 		: mul-exp OP-MUL prefix-exp
					| mul-exp OP-DIV prefix-exp
					| mul-exp OP-MOD prefix-exp
					| prefix-exp
					;
prefix-exp 			: OP-ADD prefix-exp
					| OP-SUB prefix-exp
					| OP-BITNOT prefix-exp
					| OP-BOOLNOT prefix-exp
					| OP-INCREMENT prefix-exp
					| OP-DECREMENT prefix-exp
					| postfix-exp
					;
postfix-exp 		: postfix-exp OP-INCREMENT
					| postfix-exp OP-DECREMENT
					| postfix-exp DOT identifier
					| postfix-exp function-call-operator
					| postfix-exp array-access-operator
					| primary-exp
					;

primary-exp 		: identifier
					| STRING
					| NUMBER
					| LPAREN expression RPAREN
					;

array-access-operator : LBRACKET expression RBRACKET
					;

function-call-operator : LPAREN args-list RPAREN
					| LPAREN RPAREN
					;

args-list 			: args-list COMMA expression
					| expression
					;

