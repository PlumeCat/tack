#ifndef AST_TYPE
#define AST_TYPE()
#error "Must define AST_TYPE xmacro before including ast_type.h"
#else
AST_TYPE(Unknown)

AST_TYPE(Module)
AST_TYPE(FuncDef)
AST_TYPE(ParamsDef)
AST_TYPE(StructDef)
AST_TYPE(MembersDef)

AST_TYPE(Block)// statements
AST_TYPE(VarDeclStat)
AST_TYPE(AssignmentStat)
AST_TYPE(PrintStat)
AST_TYPE(IfStat)
// AST_TYPE(ReturnStat)
// AST_TYPE(ExprStat)

// expressions
AST_TYPE(OrExpr) // binary logical
AST_TYPE(AndExpr)
AST_TYPE(XorExpr)
AST_TYPE(CmpEqExpr) // comparison
AST_TYPE(CmpNeExpr)
AST_TYPE(CmpGeExpr)
AST_TYPE(CmpLeExpr)
AST_TYPE(CmpGtExpr)
AST_TYPE(CmpLtExpr)
AST_TYPE(AddExpr) // binary arith
AST_TYPE(SubExpr)
AST_TYPE(ModExpr)
AST_TYPE(MulExpr)
AST_TYPE(DivExpr)
AST_TYPE(PowExpr)
AST_TYPE(LshExpr)
AST_TYPE(RshExpr)
AST_TYPE(BAndExpr) // binary bitwise
AST_TYPE(BOrExpr)
AST_TYPE(BXorExpr)
AST_TYPE(UnAddExpr) // unary exp
AST_TYPE(UnSubExpr)
AST_TYPE(UnNotExpr)
AST_TYPE(UnBNotExpr)
AST_TYPE(CallExpr)
AST_TYPE(ArgsList)
// TODO: call operator
// TODO: index operator
// TODO: a.b deref operator
AST_TYPE(NumLiteral) // primary exp
AST_TYPE(Identifier)
#undef AST_TYPE // automatically undef to avoid errors
#endif