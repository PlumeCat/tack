fn array_random(M) {
    const arr = []
    for i in 0, M {
        arr << random()
    }
    return arr
}

fn join(a, b) {
    const c = []

    for i in 0, #a {
        c << a[i]
    }

    for i in 0, #b {
        c << b[i]
    }

    return c
}

fn quicksort(arr) {
    const n = #arr
    if n <= 1 { return arr }

    " min and max "
    let min = arr[0]
    let max = arr[0]
    for i in 1, n {
        let ai = arr[i]
        if ai > max { max = ai }
        if ai < min { min = ai }
    }

    " midpoint "
    if min == max { return arr }
    const mid = (min + max) / 2
    const upper = []
    const lower = []

    " pivot "
    for i in 0, n {
        const e = arr[i]
        if e < mid { lower << e }
        else { upper << e }
    }

    return join(quicksort(lower), quicksort(upper))
}

const N = 1000
const A = []

for i in 0, N {
    A << i
}

const before = clock()
const B = quicksort(A)
const after = clock()
print("time taken")
print(after - before)

if #A != #B {
    print("not same size!")
}

return